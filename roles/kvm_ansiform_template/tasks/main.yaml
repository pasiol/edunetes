---
- name: Activate libvirt default pool
  become_user: root
  become: true
  register: pool_list_result
  changed_when: false
  ansible.builtin.command:
    cmd: virsh pool-list --all

- name: Extract default pool line
  changed_when: false
  ansible.builtin.set_fact:
    default_pool_line: "{{ pool_list_result.stdout_lines | select('search', 'default') | list | first }}"
  when: pool_list_result.stdout_lines | select('search', 'default') | list | length > 0

- name: Activate libvirt default pool
  become_user: root
  become: true
  when: "'inactive' in default_pool_line"
  changed_when: true
  ansible.builtin.command:
    cmd: virsh pool-start default

- name: Ensure pool directory
  become_user: root
  become: true
  ansible.builtin.file:
    path: "{{ image_pool_dir }}/{{ cluster_name }}"
    state: directory
    mode: "0711"

- name: Check is base image present
  become_user: root
  become: true
  register: stat_result
  ansible.builtin.stat:
    path: "{{ image_pool_dir }}/{{ base_image_name }}"

- name: Download base image
  become_user: root
  become: true
  register: base_image
  when: not stat_result.stat.exists
  ansible.builtin.get_url:
    url: "{{ base_image_url }}"
    dest: "{{ image_pool_dir }}/{{ base_image_name }}"
    checksum: "{{ base_image_checksum }}"
    mode: "0700"

- name: Ensure directory .ssh exists
  ansible.builtin.file:
    path: "{{ playbook_dir }}/.ssh"
    state: directory
    mode: '0700'

- name: Generate an OpenSSH keypair
  community.crypto.openssh_keypair:
    path: "{{ playbook_dir }}/.ssh/id_{{ cluster_name }}"

- name: Ensure .tf-directory
  ansible.builtin.file:
    path: "{{ playbook_dir }}/.tf"
    state: directory
    mode: "0755"

- name: Loop templates
  with_fileglob:
    - "{{ role_path }}/templates/*.j2"
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ playbook_dir }}/.tf/{{ item | split('/') | last | replace('.j2', '') }}"
    mode: "0644"
