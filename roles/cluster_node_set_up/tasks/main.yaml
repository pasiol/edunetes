---
- name: Sleep 2 minutes and wait vms to reboot
  ansible.builtin.pause:
    minutes: 2

- name: Test SSH connection with retry
  ansible.builtin.wait_for_connection:
    timeout: 600
    delay: 10
    sleep: 10

- name: Gather facts
  ansible.builtin.setup:

- name: Set hostname
  become: true
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}.{{ network.domain_name }}"
    use: systemd

- name: Update packages # TODO: Create own role for upgrade
  become: true
  register: result
  until: result is not failed
  retries: 25
  delay: 10
  ansible.builtin.apt:
    name: "*"
    update_cache: true
    autoremove: true
    only_upgrade: true

- name: Install common packages to all nodes
  become: true
  register: result
  until: result is not failed
  retries: 25
  delay: 10
  with_items:
    - "{{ cluster_node_set_up_kubernetes_node_packages }}"
  ansible.builtin.package:
    name: "{{ item }}"

- name: Include task hosts file
  ansible.builtin.include_tasks:
    file: hosts_file.yaml

- name: Disable firewall is no need behind nat
  become: true
  community.general.ufw:
    state: disabled

- name: Add overlay and br_netfilter modules
  become: true
  with_items:
    - overlay
    - br_netfilter
  community.general.modprobe:
    name: "{{ item }}"
    state: present

- name: Ensure file /etc/modules-load.d/k8s.conf
  become_user: root
  become: true
  ansible.builtin.file:
    path: /etc/modules-load.d
    state: directory
    mode: "0750"
    owner: root
    group: root

- name: Ensure file /etc/modules-load.d/k8s.conf
  become_user: root
  become: true
  ansible.builtin.file:
    path: /etc/modules-load.d/k8s.conf
    state: touch
    mode: "0750"
    owner: root
    group: root

- name: Ensure overlay in modules k8s.conf
  become: true
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/k8s.conf
    regexp: "^overlay"
    state: present
    line: overlay

- name: Ensure br_netfilter in modules k8s.conf
  become: true
  ansible.builtin.lineinfile:
    path: /etc/modules-load.d/k8s.conf
    regexp: "^br_netfilter"
    state: present
    line: br_netfilter

- name: Ensure file /etc/modules-load.d/k8s.conf
  become_user: root
  become: true
  ansible.builtin.file:
    path: /etc/sysctl.d/k8s.conf
    state: touch
    mode: "0750"
    owner: root
    group: root

- name: Ensure net.bridge.bridge-nf-call-iptables in sysctl.d k8s.conf
  become: true
  notify: Reload sysctl settings
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/k8s.conf
    regexp: "^net.bridge.bridge-nf-call-iptables"
    state: present
    line: "net.bridge.bridge-nf-call-iptables  = 1"

- name: Ensure net.bridge.bridge-nf-call-ip6tables in sysctl.d k8s.conf
  become: true
  notify: Reload sysctl settings
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/k8s.conf
    regexp: "^net.bridge.bridge-nf-call-ip6tables"
    state: present
    line: "net.bridge.bridge-nf-call-ip6tables  = 1"

- name: Ensure net.ipv4.ip_forward in sysctl.d k8s.conf
  become: true
  notify: Reload sysctl settings
  ansible.builtin.lineinfile:
    path: /etc/sysctl.d/k8s.conf
    regexp: "^net.ipv4.ip_forward"
    state: present
    line: "net.ipv4.ip_forward                 = 1"

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Ansible check file exists
  register: key
  ansible.builtin.stat:
    path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Get release key # noqa risky-shell-pipe command-instead-of-module
  become: true
  changed_when: true
  when: "not key.stat.exists"
  ansible.builtin.shell: |
    curl -fsSL https://pkgs.k8s.io/core:/stable:/v"{{ kubernetes_major_version }}"/deb/Release.key |
    gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

- name: Ansible check file exists
  register: source
  ansible.builtin.stat:
    path: /etc/apt/sources.list.d/kubernetes.list

- name: Add repository # noqa risky-shell-pipe command-instead-of-module
  become: true
  changed_when: true
  when: "not source.stat.exists"
  ansible.builtin.shell: >
    echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg]
    https://pkgs.k8s.io/core:/stable:/v"{{ kubernetes_major_version }}"/deb/ /' |
    tee /etc/apt/sources.list.d/kubernetes.list

- name: Install kubernetes packages to all nodes
  become: true
  register: result
  until: result is not failed
  retries: 25
  delay: 10
  with_items:
    - "{{ cluster_node_set_up_kubernetes_node_kubernetes_packages }}"
  ansible.builtin.apt:
    update_cache: true
    name: "{{ item }}={{ kubernetes_package_version }}"

- name: Freeze kubernetes packages # noqa command-instead-of-module
  become: true
  with_items:
    - "{{ cluster_node_set_up_kubernetes_node_kubernetes_packages }}"
  changed_when: true
  ansible.builtin.command: >
    apt-mark hold "{{ item }}"

- name: Install containerd package
  become: true
  register: result
  until: result is not failed
  retries: 25
  delay: 10
  ansible.builtin.apt:
    name: containerd

- name: Ensure directory /etc/containerd
  become_user: root
  become: true
  ansible.builtin.file:
    path: /etc/containerd
    state: directory
    mode: "0750"
    owner: root
    group: root

- name: Generate containerd config
  changed_when: true
  ansible.builtin.shell: /usr/bin/containerd config default > /home/kubeadmin/config.toml

- name: Copy containerd config file
  become: true
  ansible.builtin.copy:
    remote_src: true
    src: /home/kubeadmin/config.toml
    dest: /etc/containerd/config.toml
    owner: root
    group: root
    mode: "0750"

- name: Configure containerd
  become: true
  ansible.builtin.lineinfile:
    path: /etc/containerd/config.toml
    regexp: "^            SystemdCgroup = false"
    line: "            SystemdCgroup = true"

- name: Restart containerd service
  become: true
  ansible.builtin.systemd:
    name: containerd
    state: restarted
    daemon_reload: true
    enabled: true

- name: Pull images on host
  become: true
  changed_when: true
  register: result
  until: result is not failed
  retries: 25
  delay: 10
  ansible.builtin.command: "kubeadm config images pull --kubernetes-version=v{{ kubernetes_minor_version }}"
